server {
    server_name aadmin.cowdly.sa www.aadmin.cowdly.sa;

    root /var/www/awan/public;
    index index.php index.html;

    client_max_body_size 20M;

    location / {
        # CORS headers for all requests
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, X-XSRF-TOKEN, X-CSRF-TOKEN" always;
        add_header Access-Control-Allow-Credentials "true" always;
        add_header Access-Control-Max-Age "86400" always;

        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, X-XSRF-TOKEN, X-CSRF-TOKEN" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Max-Age "86400" always;
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }

        try_files $uri $uri/ /index.php?$query_string;
    }

    location ^~ /storage/ {
        alias /var/www/awan/storage/app/public/;
        access_log off;
        expires max;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        # غيّر السطر التالي حسب نسخة PHP-FPM لديك
        fastcgi_pass unix:/run/php/php8.4-fpm.sock;
    }

    location ~* \.(jpg|jpeg|png|gif|svg|webp|css|js|ico|ttf|woff|woff2)$ {
        expires 30d;
        access_log off;
        try_files $uri =404;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/aadmin.cowdly.sa/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/aadmin.cowdly.sa/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = aadmin.cowdly.sa) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name aadmin.cowdly.sa www.aadmin.cowdly.sa;
    return 404; # managed by Certbot
}